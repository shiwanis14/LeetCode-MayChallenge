/*Problem statement can be found here:
https://leetcode.com/explore/challenge/card/may-leetcoding-challenge/534/week-1-may-1st-may-7th/3317/*/

//Solution1- Fastest

class Solution {
    public int numJewelsInStones(String J, String S) {        
        int count = 0;
        for(char c : S.toCharArray())  
            if(J.indexOf(c)>=0)
                count++;
        return count;
    }
}

/*Solution 2. O(n)-
class Solution {
    public int numJewelsInStones(String J, String S) {    
    Set<Character> testSet = new HashSet();
    int count;

        for(int i=0; i < J.length(); i++) {
            testSet.add(J.charAt(i));
        }
        for(int i=0; i < S.length(); i++) {
            char stone = S.charAt(i);
            if(testSet.contains(stone))
                count++;
            
        }
    }
}

*/

/*Solution 3. O(n^2)
class Solution {
    public int numJewelsInStones(String J, String S) {    
        for(int i=0; i < J.length(); i++) {
                for(int j=0; j < S.length(); j++) {
                    char stone = S.charAt(i);
                    if(S.charAt(j)==J.charAt(i))
                        numOfJewels++;
                    }
             }
         }
             
 }

*/
